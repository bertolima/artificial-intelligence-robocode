FUNCTION_BLOCK getFirePower
VAR_INPUT				// Definição das variáveis de entrada
	distance : REAL;
	enemyEnergy : REAL;
	energy : REAL;
END_VAR

VAR_OUTPUT				// Definir a variável de saída
	firePower : REAL;		// 0 à 3
END_VAR

FUZZIFY distance	// Variáveis de entrada para Fuzzify 'distance': {'near', 'regular' , 'far'}
	TERM near := trape 0 0 150 300; 
	TERM regular := trape 175 250 450 600;
	TERM far := trape 475 550 2000 2000;
END_FUZZIFY

FUZZIFY enemyEnergy	//  Variáveis de entrada para Fuzzify 'enemyEnergy': { 'low', 'regular', 'high' }
	TERM low := trape 0 0 20 40;
	TERM regular := trape 25 40 60 70;
	TERM high := trape 60 70 200 200;
END_FUZZIFY

FUZZIFY energy	// Variáveis de entrada para Fuzzify  'energy': { 'low', 'regular', 'high' }
	TERM low := trape 0 0 20 40;
	TERM regular := trape 25 40 60 70;
	TERM high := trape 60 70 200 200;
END_FUZZIFY

DEFUZZIFY firePower			// Variável de saída Defuzzify 'firePower' : {'weak', 'regular', 'strong' }
	TERM weak := trape 0.01 0.1 0.5 1.5;
	TERM regular := trape 1 1.5 2 2.5;
	TERM strong := trape 2 2.5 3 3;
	METHOD : COG;		// Método 'Centro da gravidade'
	DEFAULT := 1;		// Valor default 1 (se nenhuma das regras ativar o defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// É comum utilizar o método MIN para o operador AND, e o método MAX para o operador OR.
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF distance IS near AND NOT energy IS low THEN firePower IS strong;
	RULE 2 : IF distance IS near AND energy IS low THEN firePower IS regular;
	RULE 3 : IF distance IS regular AND energy IS low THEN firePower IS weak;
	RULE 4 : IF distance IS regular AND energy IS regular THEN firePower IS regular;
	RULE 5 : IF distance IS regular AND energy IS high AND NOT energy IS high THEN firePower IS strong;
	RULE 6 : IF distance IS far AND energy IS high OR energy IS low THEN firePower IS regular;
	RULE 7 : IF distance IS far THEN firePower IS weak; 
END_RULEBLOCK

END_FUNCTION_BLOCK



FUNCTION_BLOCK getDistance

VAR_INPUT
	energy : REAL;
	enemyEnergy : REAL;
END_VAR

VAR_OUTPUT
	distance : REAL;
END_VAR

FUZZIFY energy
	TERM low := trape 0 10 20 30;
	TERM regular := trape 25 30 50 60;
	TERM high := trape 55 70 200 200;
END_FUZZIFY

FUZZIFY enemyEnergy
	TERM low := trape 0 10 20 40;
	TERM regular := trape 35 45 60 70;
	TERM high := trape 55 70 200 200;
END_FUZZIFY

DEFUZZIFY distance
	TERM veryClose := trape 15 55 95 140;
	TERM close := trape 130 160 190 220;
	TERM regular := trape 220 250 280 310;
	TERM far := trape 300 400 500 600;
	METHOD : COG;
	DEFAULT := 300;
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// É comum utilizar o método MIN para o operador AND, e o método MAX para o operador OR.
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF energy IS high AND enemyEnergy is high THEN distance IS regular;
	RULE 2 : IF energy IS high AND enemyEnergy is regular THEN distance IS close;
	RULE 3 : IF energy IS high AND enemyEnergy is regular THEN distance IS veryClose;
	RULE 4 : IF energy IS regular AND NOT enemyEnergy is high THEN distance IS regular;
	RULE 5 : IF energy IS regular AND enemyEnergy is high THEN distance IS far;
	RULE 6 : IF energy IS low AND enemyEnergy is low THEN distance IS close;
	RULE 7 : IF energy IS low AND NOT enemyEnergy is low THEN distance IS far;
END_RULEBLOCK

END_FUNCTION_BLOCK
